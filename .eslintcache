[{"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js":"1","C:\\Users\\user\\Desktop\\translationchating\\src\\App.js":"2","C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js":"4","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js":"5","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js":"6","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js":"7","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js":"8","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js":"9","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js":"10","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js":"11","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js":"12","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js":"13","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js":"14","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js":"15","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js":"16","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js":"17","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js":"18","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js":"19","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\mypage.js":"20","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\styles.js":"21","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\axios.js":"22"},{"size":517,"mtime":1610713796477,"results":"23","hashOfConfig":"24"},{"size":1015,"mtime":1614855186986,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1610713796498,"results":"26","hashOfConfig":"24"},{"size":388,"mtime":1611121041424,"results":"27","hashOfConfig":"24"},{"size":4027,"mtime":1614863275484,"results":"28","hashOfConfig":"24"},{"size":69,"mtime":1614143589532,"results":"29","hashOfConfig":"24"},{"size":388,"mtime":1614142935886,"results":"30","hashOfConfig":"24"},{"size":1082,"mtime":1613395684464,"results":"31","hashOfConfig":"24"},{"size":3785,"mtime":1614939233430,"results":"32","hashOfConfig":"24"},{"size":2222,"mtime":1614863190091,"results":"33","hashOfConfig":"24"},{"size":2152,"mtime":1614943164264,"results":"34","hashOfConfig":"24"},{"size":2398,"mtime":1614756784443,"results":"35","hashOfConfig":"24"},{"size":1930,"mtime":1615096102209,"results":"36","hashOfConfig":"24"},{"size":1764,"mtime":1614683353406,"results":"37","hashOfConfig":"24"},{"size":6373,"mtime":1614845342964,"results":"38","hashOfConfig":"24"},{"size":2559,"mtime":1614824304214,"results":"39","hashOfConfig":"24"},{"size":9861,"mtime":1614900988536,"results":"40","hashOfConfig":"24"},{"size":5841,"mtime":1614690164686,"results":"41","hashOfConfig":"24"},{"size":2393,"mtime":1614903563205,"results":"42","hashOfConfig":"24"},{"size":1848,"mtime":1614943018595,"results":"43","hashOfConfig":"24"},{"size":1393,"mtime":1614861518437,"results":"44","hashOfConfig":"24"},{"size":2326,"mtime":1615095753831,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"d9k3yh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js",[],["96","97"],"C:\\Users\\user\\Desktop\\translationchating\\src\\App.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js",["98","99","100"],"import * as s from './styles'\r\nimport {mainColor} from '../../style/index'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\nimport IMG from '../ASSETS/profile.PNG'\r\n\r\nexport default function Header() {\r\n\r\n    const LinkStyle = {borderBottom:`4px solid ${mainColor}`}\r\n\r\n    const history = useHistory();\r\n\r\n    const [login, setLogin] = useState(false);\r\n\r\n    const [menu,setMenu] = useState(false);\r\n    \r\n    const [media,setMedia] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if((window.localStorage.getItem(\"token\") != undefined \r\n        && window.localStorage.getItem(\"token\")!==\"\") \r\n        && window.localStorage.getItem(\"token\") !== \"null\"){\r\n            if(window.localStorage.getItem(\"token\").length > 1){\r\n                setLogin(true)\r\n            }\r\n        }\r\n    },[window.localStorage.getItem(\"token\")])\r\n    \r\n    const Logout =()=>{\r\n        setMenu(!menu)\r\n        setLogin(false)\r\n        window.localStorage.setItem(\"token\",\"\");\r\n        window.localStorage.setItem(\"Rtoken\",\"\");   \r\n        window.location.reload()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"token\") != undefined){\r\n            if(localStorage.getItem(\"token\").length < 10){\r\n                localStorage.setItem(\"token\", localStorage.getItem(\"RToken\"));\r\n            }\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setInterval(()=>{\r\n            if(window.innerWidth < 768){\r\n                setMedia(true);\r\n            }\r\n            else{\r\n                setMedia(false)\r\n            }\r\n        },500)\r\n    },[])\r\n    \r\n    const closeHeader =()=>{\r\n        setMenu(!menu)\r\n    }\r\n    return(\r\n        <>\r\n            <s.HeaderContainer>\r\n                <s.HeaderTitle\r\n                    onClick={()=>{history.push('/')}}\r\n                ><b>F</b>RANDOM</s.HeaderTitle>\r\n                <s.MediaHeader>\r\n                    <p onClick={()=>{\r\n                        history.push(\"/\")\r\n                    }}><i className=\"fas fa-blog\"></i><i>F</i>RANDOM</p>\r\n                    <i  className=\"fas fa-bars\"\r\n                        onClick={()=>{\r\n                            setMenu(!menu)    \r\n                        }}></i>\r\n                </s.MediaHeader>\r\n                <s.MenuBar style={media && menu ? {display:\"none\"} : {display:\"flex\"}}>\r\n                    {login && \r\n                    <>\r\n                        <s.Menu \r\n                            to=\"\"\r\n                            onClick={Logout}\r\n                        >로그아웃</s.Menu>\r\n                        <s.Menu \r\n                            to=\"/chating\"\r\n                        >시작하기</s.Menu>\r\n                        <s.Profile \r\n                            src={IMG}\r\n                            onClick={()=>{\r\n                                history.push(\"/mypage\")\r\n                            }}\r\n                        />\r\n                    </>\r\n                    }\r\n                    {!login && \r\n                        <>\r\n                        <s.Menu \r\n                            to=\"/login\"\r\n                            activeStyle={LinkStyle}\r\n                            onClick={closeHeader}\r\n                        >로그인</s.Menu>\r\n                        <s.Menu \r\n                            to=\"/signup\"\r\n                            activeStyle={LinkStyle}\r\n                            onClick={closeHeader}\r\n                        >회원가입</s.Menu>\r\n                        <s.Menu \r\n                            to=\"/chating\"\r\n                            onClick={closeHeader}\r\n                        >시작하기</s.Menu>\r\n                        </>\r\n                    }\r\n                </s.MenuBar>\r\n            </s.HeaderContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js",["101"],"import * as s from './styles'\r\nimport {ReactComponent as Ill} from '../ASSETS/illust.svg'\r\nimport {ReactComponent as Ill2} from '../ASSETS/illust2.svg'\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport axios from 'axios'\r\n\r\nexport default function MainPage() {\r\n    useEffect(()=>{\r\n        axios({\r\n            method:\"get\",\r\n            url:\"https://sonchaegeon.shop/v1/user/profile\",\r\n            headers:{\r\n                \"Content-type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \" + window.localStorage.getItem(\"token\")\r\n            },\r\n            data:{}\r\n        }).then((e)=>{\r\n            console.log(e);\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n        })\r\n    },[])\r\n    return(\r\n        <>\r\n            <s.SvgContainer>\r\n                <Ill/>\r\n                <Ill2/>\r\n            </s.SvgContainer>\r\n            <s.MainContainer>\r\n                <s.IntroMent>\r\n                    깔끔한 랜덤채팅, 청결한 랜덤채팅. <br/>\r\n                    <b>FRANDOM</b>에서 만듭니다!\r\n                </s.IntroMent>\r\n                <s.MIntroMent>FRANDOM</s.MIntroMent>\r\n                <s.SubIntro>랜덤채팅을 통해 다른 사람과 대화를 나누어 보세요!</s.SubIntro>\r\n                <s.BtnContainer>\r\n                    <s.Btn\r\n                        to=\"\"\r\n                        onClick={()=>{\r\n                            window.location.href = \"/chating\"\r\n                        }}\r\n                    >시작하기 {\">\"}</s.Btn>\r\n                    <s.Btn\r\n                        to=\"/signup\"\r\n                    >회원가입 {\">\"}</s.Btn>\r\n                </s.BtnContainer>\r\n                <div id='mobonDivBanner_514894'><iframe name='ifrad' id='mobonIframe_514894' src='//www.mediacategory.com/servlet/adBanner?from=\"+escape(document.referrer)+\"&s=514894&igb=75&iwh=640_107&cntad=1&cntsr=3' frameBorder='0' scrolling='no' style={{height:\"107px\", width:\"640px\",marginTop:\"8%\"}}></iframe></div>\r\n            </s.MainContainer>\r\n            <script src=\"//www.mediacategory.com/mediaCategory/js/mobileChk_min.js\"></script>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js",["102","103"],"import * as s from './styles'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport Loading from '../../components/PUBLIC/loading';\r\nimport { useEffect } from 'react/cjs/react.development';\r\n\r\nexport default function SignupPage() {\r\n    const [val, SetVal] = useState({\r\n        password: '',\r\n        email: '',\r\n        name: '',\r\n        age: '',\r\n        male:'M',\r\n        accessCode:\"\"\r\n    });\r\n    const history = useHistory();\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [checkEmail,setCheckEmail] = useState(false)\r\n\r\n    const [sendCheck,setSendCheck] = useState(false)\r\n\r\n    const { password, email, name, age, accessCode } = val;\r\n\r\n    let i = 0;\r\n\r\n    const InputFunc = (e) => {\r\n        const { value, name } = e.target;\r\n        SetVal({\r\n            ...val,\r\n            [name]: value\r\n        })\r\n    }\r\n    const SignUpFunc = () => {\r\n        if(!checkEmail){\r\n            alert(\"인증번호를 입력하세요\")\r\n            return;\r\n        }\r\n        setToggle(true)\r\n       axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/register\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            data:{\r\n                \"username\": val.name, \"email\": val.email, \"password\": val.password, \"age\" : val.age, \"gender\" : val.male\r\n            }\r\n        }).then(()=>{\r\n            history.push('/login')\r\n        }).catch((err)=>{\r\n            alert(\"회원가입에 실패했습니다.\")\r\n            window.alert(err.response.data.error.message)\r\n            setToggle(false)\r\n        }) \r\n    }\r\n\r\n    const LimNum = (e)=>{\r\n        const {value, maxLength} = e.target\r\n        if(value.length > maxLength){\r\n            e.target.value = value.slice(0,maxLength)\r\n        }   \r\n        if(value < 0){\r\n            e.target.value = 0;\r\n        }\r\n    }\r\n\r\n    const timer =()=>{\r\n        if(i > 0)\r\n        setInterval(()=>{\r\n            i++;\r\n            if(i == 300){\r\n                alert(\"인증번호 인증 시간이 지났습니다.\")\r\n                clearInterval();\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    const SendEmail =()=>{\r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/verify\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            data:{\r\n                \"email\" : email\r\n            }\r\n        }).then(()=>{\r\n            timer()\r\n            alert(\"인증번호를 발송했습니다.\")\r\n            setSendCheck(true)\r\n        }).catch(()=>{\r\n            alert(\"이메일이 잘못됬습니다\")\r\n        })\r\n    }\r\n\r\n    const CheckCode =()=>{\r\n        \r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/check\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            data:{\r\n                \"email\" : email,\r\n                \"verify\": accessCode.toString()\r\n            }\r\n        }).then(()=>{\r\n            alert(\"인증번호가 확인되었습니다.\")\r\n            setCheckEmail(true)\r\n        }).catch(()=>{\r\n            alert(\"인증번호가 틀렸습니다\")\r\n        }) \r\n    }\r\n\r\n    return(\r\n        <>\r\n            {toggle && <Loading></Loading>}\r\n            <s.SignupContainer>\r\n                <s.Signup>SIGNUP</s.Signup>\r\n                <s.AccessEmail>\r\n                    <s.Input\r\n                        placeholder=\"사용할 이메일을 입력하세요.\"\r\n                        name=\"email\"\r\n                        onChange={InputFunc}\r\n                        value={email}\r\n                    />\r\n                <s.SendBtn\r\n                    onClick={SendEmail}\r\n                >인증번호 발송</s.SendBtn>\r\n                </s.AccessEmail>\r\n                <s.AccessEmail>\r\n                {sendCheck ? \r\n                    <> {checkEmail ? \r\n                        <>\r\n                            <s.Input\r\n                            onChange={InputFunc}\r\n                            readOnly\r\n                            />\r\n                            <s.SendBtn>✔ 인증됨</s.SendBtn>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <s.Input\r\n                            name=\"accessCode\"\r\n                            onChange={InputFunc}\r\n                            placeholder=\"받은 인증번호를 입력하세요.\"\r\n                            />\r\n                            <s.SendBtn\r\n                            onClick={CheckCode}\r\n                            >확인하기</s.SendBtn>\r\n                        </>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <s.Input\r\n                        style={{backgroundColor:\"rgb(220,220,220)\", border:\"none\"}}\r\n                        placeholder=\"인증번호를 발송해주세요\"\r\n                        readOnly\r\n                    />\r\n\r\n                }\r\n                </s.AccessEmail>\r\n                <s.Input\r\n                    placeholder=\"사용할 비밀번호를 입력하세요.\"\r\n                    name=\"password\"\r\n                    onChange={InputFunc}\r\n                    value={password}\r\n                    type=\"password\"\r\n                />\r\n                <s.Input\r\n                    placeholder=\"사용할 닉네임을 입력하세요.\"\r\n                    name=\"name\"\r\n                    onChange={InputFunc}\r\n                    value={name}\r\n                />\r\n                <s.Input\r\n                    placeholder=\"나이를 입력하세요.\"\r\n                    type=\"number\"\r\n                    maxLength=\"2\"\r\n                    name=\"age\"\r\n                    onChange={InputFunc}\r\n                    value={age}\r\n                    onInput={LimNum}\r\n                />\r\n                <s.Select\r\n                    onChange={InputFunc}\r\n                    name=\"male\"\r\n                >\r\n                    <option value=\"M\">남자</option>\r\n                    <option value=\"W\">여자</option>\r\n                </s.Select>\r\n                <s.Btn\r\n                    onClick={SignUpFunc}\r\n                >회원가입</s.Btn>\r\n            </s.SignupContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js",["104","105","106","107","108","109","110","111"],"import * as s from './styles'\r\n\r\nimport {ReactComponent as Ill} from '../ASSETS/illust.svg'\r\n\r\nimport {ReactComponent as Ill2} from '../ASSETS/illust2.svg'\r\n\r\nimport { useHistory } from 'react-router'\r\n\r\nimport React,{useState,useRef,useEffect} from 'react'\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport ReportModal from './reportModal'\r\n\r\nimport axios from 'axios'\r\n\r\nimport * as R from '../axios'\r\n\r\nconst socket = io(\"wss://sonchaegeon.shop\", {\r\n    query: {\r\n        token: \"Bearer \" + window.localStorage.getItem(\"token\") \r\n    }\r\n})\r\n\r\nconst ChatingComponent = React.memo(()=> {\r\n\r\n    const history = useHistory();\r\n\r\n    const [data, setData] = useState(\"\");\r\n\r\n    const [Chating, setChating] = useState([]);\r\n\r\n    const [RModalState,setRModalState] = useState(false);\r\n\r\n    const [OutModal,setOutModal] = useState(false);\r\n\r\n    const [msg,setMsg] = useState(\"\");\r\n\r\n    const [you,setYou] = useState(\"\");\r\n\r\n    const [match,setMatch] = useState(false)\r\n\r\n    const [file,setFile] = useState(\"\");\r\n\r\n    const [url,setUrl] = useState(\"\");\r\n \r\n    const ChatingDiv = useRef();\r\n\r\n    const ChatingSave = (e) => {\r\n        if(e.target.value === \" \"){\r\n            setData(\"\")\r\n        }\r\n        else{\r\n            setData(e.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(window.localStorage.getItem(\"token\") == undefined){ \r\n            alert(\"로그인 후 이용해주세요!\")\r\n            history.push(\"/\")\r\n        }\r\n        if(window.localStorage.getItem(\"token\") != undefined){ \r\n            if(window.localStorage.getItem(\"token\").length < 10){    \r\n                alert(\"로그인 후 이용해주세요!\")\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const Send = (e) => {\r\n        e.preventDefault();\r\n        setChating([\r\n            ...Chating,\r\n            { chating:data, id:1 }\r\n        ]);\r\n        socket.emit(\"sendMessage\", data);\r\n        setData(\"\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n        ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n    },[Chating]);\r\n\r\n    const ReportModalOn=()=>{\r\n        if(!match){\r\n            alert(\"상대방이 없습니다\");\r\n            return;\r\n        }\r\n        setRModalState(!RModalState);     \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n            // 소켓 연결\r\n            socket.on(\"connect\", () => {\r\n                console.log(\"connect\");\r\n                socket.emit(\"search\")\r\n            });\r\n\r\n            socket.on(\"disconnect\", () => {\r\n                console.log(\"disconnect\")\r\n            });\r\n            // 조인 룸\r\n            socket.on(\"joinRoom\", () => {\r\n                socket.on(\"matched\", () => {\r\n                    console.log(\"상대방 매치\")\r\n                    setMatch(true)\r\n                })\r\n            })\r\n            socket.on(\"matched\", () => {\r\n                console.log(\"상대방 매치\")\r\n                setMatch(true)\r\n            })\r\n            socket.on(\"leaveRoom\",()=>{\r\n                console.log(\"상대방 떠남\")\r\n                setMatch(false)\r\n                setOutModal(true)\r\n                setRModalState(false);\r\n                socket.emit(\"leaveRoom\",()=>{\r\n                    console.log(\"leaveRoom\");\r\n                })\r\n            }) \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        // 메세지 받기\r\n        socket.on(\"receiveMessage\", (e,name) => {\r\n            setYou(name)\r\n            setMsg(e)\r\n        })\r\n\r\n        socket.on(\"fileUpload\",(res)=>{\r\n            setUrl(res.url)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            {\r\n                chating:url,\r\n                id:3\r\n            }\r\n        ])\r\n        if(window.localStorage.getItem(\"token\") != undefined){\r\n            setTimeout(()=>{\r\n                ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n            },100)\r\n        } \r\n    },[url])\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            { chating:msg, id:2 }\r\n        ])\r\n    },[msg])\r\n\r\n    const Search =()=>{\r\n        // 방 찾기  \r\n        socket.emit(\"search\", () => {\r\n            console.log(\"search\");\r\n        });\r\n        setOutModal(false)\r\n        setChating([])\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            {\r\n                chating:file,\r\n                id:3\r\n            }\r\n        ])\r\n    },[file])\r\n\r\n    const upload =(e)=>{\r\n        if(!match){\r\n            alert(\"상대방이 없습니다\")\r\n            return;\r\n        }\r\n        const fd = new FormData();\r\n        setFile(URL.createObjectURL(e.target.files[0]))\r\n        console.log(URL.createObjectURL(e.target.files[0]))\r\n        fd.append(\"file\",e.target.files[0]);\r\n\r\n        R.WithTokenRequest(\"v1/file,\",fd,\"사진 업로드\")\r\n        .then((e)=>{\r\n            console.log(e);\r\n        })\r\n/*         axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/file\",\r\n            headers:{\r\n                \"Content-type\":\"multipart/form-data\", \r\n                \"Authorization\":\"Bearer \" + window.localStorage.getItem(\"token\")\r\n            },\r\n            data:fd\r\n        }).then((e)=>{\r\n            socket.emit(\"fileUpload\",{url:e.data.url})\r\n        }).catch((e)=>{\r\n            console.log(e)\r\n        }) */\r\n\r\n        setTimeout(()=>{\r\n            ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n        },100)\r\n        setTimeout(()=>{\r\n            setFile(\"\")\r\n        },1000)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        { OutModal &&  \r\n            <s.ModalContainer>\r\n                <s.SmallModal>\r\n                    <s.Alert>상대방이 나갔습니다.</s.Alert>\r\n                    <s.MBtnCont>\r\n                        <s.MBtn\r\n                            onClick={Search}\r\n                        >상대 찾기</s.MBtn>\r\n                        <s.MBtn onClick={()=>{\r\n                            window.location.href = \"/\"\r\n                        }}>나가기</s.MBtn>\r\n                    </s.MBtnCont>\r\n                </s.SmallModal>\r\n            </s.ModalContainer> \r\n        }\r\n        { RModalState && <ReportModal event={ReportModalOn}></ReportModal> }\r\n\r\n        <s.SvgContainer>\r\n            <Ill/>\r\n            <Ill2/>\r\n        </s.SvgContainer>\r\n        <s.MainContainer>\r\n            <s.ChatingContainer ref={ChatingDiv}>\r\n                <b>상대방을 찾고 있습니다...</b>\r\n                {match && <b>상대방이 매치되었습니다.</b>}\r\n                {\r\n                    Chating.map((e,index) => {\r\n                        return (\r\n                            <div key={index} style={{width:\"100%\"}}>\r\n                            {e.id === 1 && e.chating !== \"\" && \r\n                                <s.MyChat>\r\n                                    <s.MyContainer>{e.chating}</s.MyContainer>\r\n                                </s.MyChat>\r\n                            }\r\n                            {e.id === 2 && e.chating !== \"\" && \r\n                                <s.YouChat>\r\n                                    <p>{you}</p>\r\n                                    <s.YouContainer>{e.chating}</s.YouContainer>\r\n                                </s.YouChat>\r\n                            }\r\n                            {e.id === 3 && e.chating !==\"\" &&\r\n                                <s.Img \r\n                                    src={e.chating} \r\n                                    alt=\"\"\r\n                                    onClick={()=>{\r\n                                        window.open(e.chating)\r\n                                    }}\r\n                                />\r\n                            }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </s.ChatingContainer>\r\n            <s.InputContainer>\r\n                {\r\n                    match === false ? \r\n                    <form onSubmit={Send}>\r\n                        <s.Input\r\n                            placeholder=\"매칭 후 입력 가능합니다.\"\r\n                            onChange={ChatingSave}\r\n                            value={data}\r\n                            readOnly\r\n                        />\r\n                    </form>\r\n                    :\r\n                    <form onSubmit={Send}>\r\n                        <s.Input\r\n                            placeholder=\"보낼 내용을 입력하세요.\"\r\n                            onChange={ChatingSave}\r\n                            value={data}\r\n                        />\r\n                    </form>\r\n                }\r\n                <form onChange={upload} action=\"upload\" id=\"uploadForm\" method=\"post\" encType=\"multipart/form-data\">\r\n                        <input type=\"file\" name=\"file\" id=\"file\" style={{display:\"none\"}}/>\r\n                </form>\r\n                <s.MenuBar>\r\n                    <s.MenuBtn\r\n                        onClick={()=>{\r\n                            window.location.href = \"/\"\r\n                        }}\r\n                    ># 채팅종료</s.MenuBtn>\r\n                    <s.MenuBtn onClick={ReportModalOn}># 신고하기</s.MenuBtn>\r\n                    <s.MenuBtn\r\n                        onClick={()=>{\r\n                            document.all.file.click();\r\n                        }}\r\n                    ># 파일전송</s.MenuBtn>\r\n{/*                     {\r\n                        out &&                     \r\n                        <s.MenuBtn\r\n                            onClick={Search}\r\n                            style={{backgroundColor:\"tomato\", color:\"white\"}}\r\n                        ># 상대찾기</s.MenuBtn>\r\n                    } */}\r\n                </s.MenuBar>\r\n            </s.InputContainer>\r\n        </s.MainContainer>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ChatingComponent","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\mypage.js",["112","113","114","115","116","117","118"],"import axios from 'axios'\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport * as s from './styles'\r\n\r\nimport IMG from '../ASSETS/profile.PNG'\r\n\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport Loading from '../../components/PUBLIC/loading'\r\n\r\nimport * as R from '../axios'\r\n\r\nexport default function Mypage() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [data,setData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        gender:\"\",\r\n        url:\"\"\r\n    })\r\n\r\n    const [load,setLoad] = useState(true);\r\n\r\n    const {name,email,gender,url} = data;\r\n\r\n    useEffect(()=>{\r\n        if(window.localStorage.getItem(\"token\") == undefined){ \r\n            alert(\"로그인 후 이용해주세요!\")\r\n            history.push(\"/\")\r\n        }\r\n        if(window.localStorage.getItem(\"token\") != undefined){ \r\n            if(window.localStorage.getItem(\"token\").length < 10){    \r\n                alert(\"로그인 후 이용해주세요!\")\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n        axios({\r\n            method:\"get\",\r\n            url:\"https://sonchaegeon.shop/v1/user/profile\",\r\n            headers:{\r\n                \"Content-type\" : \"application/json\",\r\n                \"Authorization\" : \"Bearer \" + window.localStorage.getItem(\"token\")\r\n            },\r\n            data:{}\r\n        }).then((e)=>{\r\n            console.log(e);\r\n        }).catch((e)=>{\r\n            console.log(e);\r\n        })\r\n    },[])\r\n    return(\r\n        <>\r\n        { load && <Loading/> }\r\n            <s.Background>\r\n                <s.ProfileContainer>\r\n                    <s.Plus>+</s.Plus>\r\n                    <s.Profile src={IMG}/>\r\n                </s.ProfileContainer>\r\n                <s.Name>{name} <b>{gender}</b></s.Name>\r\n                <s.Email>{email}</s.Email>\r\n            </s.Background>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\axios.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":20,"column":50,"nodeType":"125","messageId":"126","endLine":20,"endColumn":52},{"ruleId":"127","severity":1,"message":"128","line":27,"column":8,"nodeType":"129","endLine":27,"endColumn":44},{"ruleId":"123","severity":1,"message":"124","line":38,"column":42,"nodeType":"125","messageId":"126","endLine":38,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":47,"column":49,"nodeType":"132","endLine":47,"endColumn":306},{"ruleId":"133","severity":1,"message":"134","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":19},{"ruleId":"123","severity":1,"message":"137","line":74,"column":18,"nodeType":"125","messageId":"126","endLine":74,"endColumn":20},{"ruleId":"133","severity":1,"message":"138","line":15,"column":8,"nodeType":"135","messageId":"136","endLine":15,"endColumn":13},{"ruleId":"123","severity":1,"message":"137","line":59,"column":49,"nodeType":"125","messageId":"126","endLine":59,"endColumn":51},{"ruleId":"123","severity":1,"message":"124","line":63,"column":49,"nodeType":"125","messageId":"126","endLine":63,"endColumn":51},{"ruleId":"127","severity":1,"message":"139","line":69,"column":7,"nodeType":"140","endLine":69,"endColumn":9,"suggestions":"141"},{"ruleId":"123","severity":1,"message":"124","line":146,"column":49,"nodeType":"125","messageId":"126","endLine":146,"endColumn":51},{"ruleId":"127","severity":1,"message":"142","line":151,"column":7,"nodeType":"140","endLine":151,"endColumn":12,"suggestions":"143"},{"ruleId":"127","severity":1,"message":"142","line":158,"column":7,"nodeType":"140","endLine":158,"endColumn":12,"suggestions":"144"},{"ruleId":"127","severity":1,"message":"142","line":177,"column":7,"nodeType":"140","endLine":177,"endColumn":13,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"146","line":13,"column":13,"nodeType":"135","messageId":"136","endLine":13,"endColumn":14},{"ruleId":"133","severity":1,"message":"147","line":19,"column":17,"nodeType":"135","messageId":"136","endLine":19,"endColumn":24},{"ruleId":"133","severity":1,"message":"148","line":26,"column":17,"nodeType":"135","messageId":"136","endLine":26,"endColumn":24},{"ruleId":"133","severity":1,"message":"149","line":28,"column":30,"nodeType":"135","messageId":"136","endLine":28,"endColumn":33},{"ruleId":"123","severity":1,"message":"137","line":31,"column":49,"nodeType":"125","messageId":"126","endLine":31,"endColumn":51},{"ruleId":"123","severity":1,"message":"124","line":35,"column":49,"nodeType":"125","messageId":"126","endLine":35,"endColumn":51},{"ruleId":"127","severity":1,"message":"139","line":54,"column":7,"nodeType":"140","endLine":54,"endColumn":9,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'Chating'. Either include it or remove the dependency array. You can also do a functional update 'setChating(C => ...)' if you only need 'Chating' in the 'setChating' call.",["154"],["155"],["156"],"'R' is defined but never used.","'setData' is assigned a value but never used.","'setLoad' is assigned a value but never used.","'url' is assigned a value but never used.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"158","fix":"166"},"Update the dependencies array to be: [history]",{"range":"167","text":"168"},"Update the dependencies array to be: [Chating, url]",{"range":"169","text":"170"},"Update the dependencies array to be: [Chating, msg]",{"range":"171","text":"172"},"Update the dependencies array to be: [Chating, file]",{"range":"173","text":"174"},{"range":"175","text":"168"},[1685,1687],"[history]",[3807,3812],"[Chating, url]",[3938,3943],"[Chating, msg]",[4310,4316],"[Chating, file]",[1406,1408]]