[{"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js":"1","C:\\Users\\user\\Desktop\\translationchating\\src\\App.js":"2","C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js":"4","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js":"5","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js":"6","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js":"7","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js":"8","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js":"9","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js":"10","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js":"11","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js":"12","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js":"13","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js":"14","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js":"15","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js":"16","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js":"17","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js":"18","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js":"19","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\mypage.js":"20","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\styles.js":"21"},{"size":517,"mtime":1610713796477,"results":"22","hashOfConfig":"23"},{"size":1015,"mtime":1614855186986,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1610713796498,"results":"25","hashOfConfig":"23"},{"size":388,"mtime":1611121041424,"results":"26","hashOfConfig":"23"},{"size":4013,"mtime":1614169866051,"results":"27","hashOfConfig":"23"},{"size":69,"mtime":1614143589532,"results":"28","hashOfConfig":"23"},{"size":388,"mtime":1614142935886,"results":"29","hashOfConfig":"23"},{"size":1082,"mtime":1613395684464,"results":"30","hashOfConfig":"23"},{"size":3821,"mtime":1614856880164,"results":"31","hashOfConfig":"23"},{"size":2222,"mtime":1614853616380,"results":"32","hashOfConfig":"23"},{"size":1613,"mtime":1614854049752,"results":"33","hashOfConfig":"23"},{"size":2398,"mtime":1614756784443,"results":"34","hashOfConfig":"23"},{"size":2578,"mtime":1614781192517,"results":"35","hashOfConfig":"23"},{"size":1764,"mtime":1614683353406,"results":"36","hashOfConfig":"23"},{"size":6373,"mtime":1614845342964,"results":"37","hashOfConfig":"23"},{"size":2559,"mtime":1614824304214,"results":"38","hashOfConfig":"23"},{"size":9662,"mtime":1614854342675,"results":"39","hashOfConfig":"23"},{"size":5841,"mtime":1614690164686,"results":"40","hashOfConfig":"23"},{"size":2161,"mtime":1614397769529,"results":"41","hashOfConfig":"23"},{"size":1047,"mtime":1614856819111,"results":"42","hashOfConfig":"23"},{"size":1352,"mtime":1614856375834,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"d9k3yh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js",[],["90","91"],"C:\\Users\\user\\Desktop\\translationchating\\src\\App.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js",["92","93","94"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js",["95"],"import * as s from './styles'\r\nimport {ReactComponent as Ill} from '../ASSETS/illust.svg'\r\nimport {ReactComponent as Ill2} from '../ASSETS/illust2.svg'\r\n\r\nexport default function MainPage() {\r\n    return(\r\n        <>\r\n            <s.SvgContainer>\r\n                <Ill/>\r\n                <Ill2/>\r\n            </s.SvgContainer>\r\n            <s.MainContainer>\r\n                <s.IntroMent>\r\n                    깔끔한 랜덤채팅, 청결한 랜덤채팅. <br/>\r\n                    <b>FRANDOM</b>에서 만듭니다!\r\n                </s.IntroMent>\r\n                <s.MIntroMent>FRANDOM</s.MIntroMent>\r\n                <s.SubIntro>랜덤채팅을 통해 다른 사람과 대화를 나누어 보세요!</s.SubIntro>\r\n                <s.BtnContainer>\r\n                    <s.Btn\r\n                        to=\"\"\r\n                        onClick={()=>{\r\n                            window.location.href = \"/chating\"\r\n                        }}\r\n                    >시작하기 {\">\"}</s.Btn>\r\n                    <s.Btn\r\n                        to=\"/signup\"\r\n                    >회원가입 {\">\"}</s.Btn>\r\n                </s.BtnContainer>\r\n                <div id='mobonDivBanner_514894'><iframe name='ifrad' id='mobonIframe_514894' src='//www.mediacategory.com/servlet/adBanner?from=\"+escape(document.referrer)+\"&s=514894&igb=75&iwh=640_107&cntad=1&cntsr=3' frameBorder='0' scrolling='no' style={{height:\"107px\", width:\"640px\",marginTop:\"8%\"}}></iframe></div>\r\n            </s.MainContainer>\r\n            <script src=\"//www.mediacategory.com/mediaCategory/js/mobileChk_min.js\"></script>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js",["96","97"],"import * as s from './styles'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useState} from 'react'\r\nimport Loading from '../../components/PUBLIC/loading';\r\nimport { useEffect } from 'react/cjs/react.development';\r\n\r\nexport default function SignupPage() {\r\n    const [val, SetVal] = useState({\r\n        password: '',\r\n        email: '',\r\n        name: '',\r\n        age: '',\r\n        male:'M',\r\n        accessCode:\"\"\r\n    });\r\n    const history = useHistory();\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [checkEmail,setCheckEmail] = useState(false)\r\n\r\n    const [sendCheck,setSendCheck] = useState(false)\r\n\r\n    const { password, email, name, age, accessCode } = val;\r\n\r\n    let i = 0;\r\n\r\n    const InputFunc = (e) => {\r\n        const { value, name } = e.target;\r\n        SetVal({\r\n            ...val,\r\n            [name]: value\r\n        })\r\n    }\r\n    const SignUpFunc = () => {\r\n        if(!checkEmail){\r\n            alert(\"인증번호를 입력하세요\")\r\n            return;\r\n        }\r\n        setToggle(true)\r\n       axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/register\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            data:{\r\n                \"username\": val.name, \"email\": val.email, \"password\": val.password, \"age\" : val.age, \"gender\" : val.male\r\n            }\r\n        }).then(()=>{\r\n            history.push('/login')\r\n        }).catch((err)=>{\r\n            alert(\"회원가입에 실패했습니다.\")\r\n            window.alert(err.response.data.error.message)\r\n            setToggle(false)\r\n        }) \r\n    }\r\n\r\n    const LimNum = (e)=>{\r\n        const {value, maxLength} = e.target\r\n        if(value.length > maxLength){\r\n            e.target.value = value.slice(0,maxLength)\r\n        }   \r\n        if(value < 0){\r\n            e.target.value = 0;\r\n        }\r\n    }\r\n\r\n    const timer =()=>{\r\n        if(i > 0)\r\n        setInterval(()=>{\r\n            i++;\r\n            if(i == 300){\r\n                alert(\"인증번호 인증 시간이 지났습니다.\")\r\n                clearInterval();\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    const SendEmail =()=>{\r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/verify\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            data:{\r\n                \"email\" : email\r\n            }\r\n        }).then(()=>{\r\n            timer()\r\n            alert(\"인증번호를 발송했습니다.\")\r\n            setSendCheck(true)\r\n        }).catch(()=>{\r\n            alert(\"이메일이 잘못됬습니다\")\r\n        })\r\n    }\r\n\r\n    const CheckCode =()=>{\r\n        \r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/check\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            data:{\r\n                \"email\" : email,\r\n                \"verify\": accessCode.toString()\r\n            }\r\n        }).then(()=>{\r\n            alert(\"인증번호가 확인되었습니다.\")\r\n            setCheckEmail(true)\r\n        }).catch(()=>{\r\n            alert(\"인증번호가 틀렸습니다\")\r\n        }) \r\n    }\r\n\r\n    return(\r\n        <>\r\n            {toggle && <Loading></Loading>}\r\n            <s.SignupContainer>\r\n                <s.Signup>SIGNUP</s.Signup>\r\n                <s.AccessEmail>\r\n                    <s.Input\r\n                        placeholder=\"사용할 이메일을 입력하세요.\"\r\n                        name=\"email\"\r\n                        onChange={InputFunc}\r\n                        value={email}\r\n                    />\r\n                <s.SendBtn\r\n                    onClick={SendEmail}\r\n                >인증번호 발송</s.SendBtn>\r\n                </s.AccessEmail>\r\n                <s.AccessEmail>\r\n                {sendCheck ? \r\n                    <> {checkEmail ? \r\n                        <>\r\n                            <s.Input\r\n                            onChange={InputFunc}\r\n                            readOnly\r\n                            />\r\n                            <s.SendBtn>✔ 인증됨</s.SendBtn>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <s.Input\r\n                            name=\"accessCode\"\r\n                            onChange={InputFunc}\r\n                            placeholder=\"받은 인증번호를 입력하세요.\"\r\n                            />\r\n                            <s.SendBtn\r\n                            onClick={CheckCode}\r\n                            >확인하기</s.SendBtn>\r\n                        </>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <s.Input\r\n                        style={{backgroundColor:\"rgb(220,220,220)\", border:\"none\"}}\r\n                        placeholder=\"인증번호를 발송해주세요\"\r\n                        readOnly\r\n                    />\r\n\r\n                }\r\n                </s.AccessEmail>\r\n                <s.Input\r\n                    placeholder=\"사용할 비밀번호를 입력하세요.\"\r\n                    name=\"password\"\r\n                    onChange={InputFunc}\r\n                    value={password}\r\n                    type=\"password\"\r\n                />\r\n                <s.Input\r\n                    placeholder=\"사용할 닉네임을 입력하세요.\"\r\n                    name=\"name\"\r\n                    onChange={InputFunc}\r\n                    value={name}\r\n                />\r\n                <s.Input\r\n                    placeholder=\"나이를 입력하세요.\"\r\n                    type=\"number\"\r\n                    maxLength=\"2\"\r\n                    name=\"age\"\r\n                    onChange={InputFunc}\r\n                    value={age}\r\n                    onInput={LimNum}\r\n                />\r\n                <s.Select\r\n                    onChange={InputFunc}\r\n                    name=\"male\"\r\n                >\r\n                    <option value=\"M\">남자</option>\r\n                    <option value=\"W\">여자</option>\r\n                </s.Select>\r\n                <s.Btn\r\n                    onClick={SignUpFunc}\r\n                >회원가입</s.Btn>\r\n            </s.SignupContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js",["98","99","100","101","102","103"],"import * as s from './styles'\r\n\r\nimport {ReactComponent as Ill} from '../ASSETS/illust.svg'\r\n\r\nimport {ReactComponent as Ill2} from '../ASSETS/illust2.svg'\r\n\r\nimport { useHistory } from 'react-router'\r\n\r\nimport React,{useState,useRef,useEffect} from 'react'\r\n\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport ReportModal from './reportModal'\r\n\r\nimport axios from 'axios'\r\n\r\nconst socket = io(\"wss://sonchaegeon.shop\", {\r\n    query: {\r\n        token: \"Bearer \" + window.localStorage.getItem(\"token\") \r\n    }\r\n})\r\n\r\nconst ChatingComponent = React.memo(()=> {\r\n\r\n    const history = useHistory();\r\n\r\n    const [data, setData] = useState(\"\");\r\n\r\n    const [Chating, setChating] = useState([]);\r\n\r\n    const [RModalState,setRModalState] = useState(false);\r\n\r\n    const [OutModal,setOutModal] = useState(false);\r\n\r\n    const [msg,setMsg] = useState(\"\");\r\n\r\n    const [you,setYou] = useState(\"\");\r\n\r\n    const [match,setMatch] = useState(false)\r\n\r\n    const [file,setFile] = useState(\"\");\r\n\r\n    const [url,setUrl] = useState(\"\");\r\n \r\n    const ChatingDiv = useRef();\r\n\r\n    const ChatingSave = (e) => {\r\n        if(e.target.value === \" \"){\r\n            setData(\"\")\r\n        }\r\n        else{\r\n            setData(e.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(window.localStorage.getItem(\"token\") == undefined){ \r\n            alert(\"로그인 후 이용해주세요!\")\r\n            history.push(\"/\")\r\n        }\r\n        if(window.localStorage.getItem(\"token\") != undefined){ \r\n            if(window.localStorage.getItem(\"token\").length < 10){    \r\n                alert(\"로그인 후 이용해주세요!\")\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const Send = (e) => {\r\n        e.preventDefault();\r\n        setChating([\r\n            ...Chating,\r\n            { chating:data, id:1 }\r\n        ]);\r\n        socket.emit(\"sendMessage\", data);\r\n        setData(\"\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n        ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n    },[Chating]);\r\n\r\n    const ReportModalOn=()=>{\r\n        if(!match){\r\n            alert(\"상대방이 없습니다\");\r\n            return;\r\n        }\r\n        setRModalState(!RModalState);     \r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n            // 소켓 연결\r\n            socket.on(\"connect\", () => {\r\n                console.log(\"connect\");\r\n                socket.emit(\"search\")\r\n            });\r\n\r\n            socket.on(\"disconnect\", () => {\r\n                console.log(\"disconnect\")\r\n            });\r\n            // 조인 룸\r\n            socket.on(\"joinRoom\", () => {\r\n                socket.on(\"matched\", () => {\r\n                    console.log(\"상대방 매치\")\r\n                    setMatch(true)\r\n                })\r\n            })\r\n            socket.on(\"matched\", () => {\r\n                console.log(\"상대방 매치\")\r\n                setMatch(true)\r\n            })\r\n            socket.on(\"leaveRoom\",()=>{\r\n                console.log(\"상대방 떠남\")\r\n                setMatch(false)\r\n                setOutModal(true)\r\n                socket.emit(\"leaveRoom\",()=>{\r\n                    console.log(\"leaveRoom\");\r\n                })\r\n            }) \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        // 메세지 받기\r\n        socket.on(\"receiveMessage\", (e,name) => {\r\n            setYou(name)\r\n            setMsg(e)\r\n        })\r\n\r\n        socket.on(\"fileUpload\",(res)=>{\r\n            setUrl(res.url)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            {\r\n                chating:url,\r\n                id:3\r\n            }\r\n        ])\r\n/*         if(window.localStorage.getItem(\"token\") != undefined){\r\n            setTimeout(()=>{\r\n                ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n            },100)\r\n        } */\r\n    },[url])\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            { chating:msg, id:2 }\r\n        ])\r\n    },[msg])\r\n\r\n    const Search =()=>{\r\n        // 방 찾기  \r\n        socket.emit(\"search\", () => {\r\n            console.log(\"search\");\r\n        });\r\n        setOutModal(false)\r\n        setChating([])\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setChating([\r\n            ...Chating,\r\n            {\r\n                chating:file,\r\n                id:3\r\n            }\r\n        ])\r\n    },[file])\r\n\r\n    const upload =(e)=>{\r\n        if(!match){\r\n            alert(\"상대방이 없습니다\")\r\n            return;\r\n        }\r\n        const fd = new FormData();\r\n        setFile(URL.createObjectURL(e.target.files[0]))\r\n        console.log(URL.createObjectURL(e.target.files[0]))\r\n        fd.append(\"file\",e.target.files[0]);\r\n\r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/file\",\r\n            headers:{\r\n                \"Content-type\":\"multipart/form-data\", \r\n                \"Authorization\":\"Bearer \" + window.localStorage.getItem(\"token\")\r\n            },\r\n            data:fd\r\n        }).then((e)=>{\r\n            socket.emit(\"fileUpload\",{url:e.data.url})\r\n        }).catch((e)=>{\r\n            console.log(e)\r\n        })\r\n\r\n        setTimeout(()=>{\r\n            ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n        },100)\r\n        setTimeout(()=>{\r\n            setFile(\"\")\r\n        },1000)\r\n    }\r\n\r\n    return(\r\n        <>\r\n        { OutModal &&  \r\n            <s.ModalContainer>\r\n                <s.SmallModal>\r\n                    <s.Alert>상대방이 나갔습니다.</s.Alert>\r\n                    <s.MBtnCont>\r\n                        <s.MBtn\r\n                            onClick={Search}\r\n                        >상대 찾기</s.MBtn>\r\n                        <s.MBtn onClick={()=>{\r\n                            window.location.href = \"/\"\r\n                        }}>나가기</s.MBtn>\r\n                    </s.MBtnCont>\r\n                </s.SmallModal>\r\n            </s.ModalContainer> \r\n        }\r\n        { RModalState && <ReportModal event={ReportModalOn}></ReportModal> }\r\n\r\n        <s.SvgContainer>\r\n            <Ill/>\r\n            <Ill2/>\r\n        </s.SvgContainer>\r\n        <s.MainContainer>\r\n            <s.ChatingContainer ref={ChatingDiv}>\r\n                <b>상대방을 찾고 있습니다...</b>\r\n                {match && <b>상대방이 매치되었습니다.</b>}\r\n                {\r\n                    Chating.map((e,index) => {\r\n                        return (\r\n                            <div key={index} style={{width:\"100%\"}}>\r\n                            {e.id === 1 && e.chating !== \"\" && \r\n                                <s.MyChat>\r\n                                    <s.MyContainer>{e.chating}</s.MyContainer>\r\n                                </s.MyChat>\r\n                            }\r\n                            {e.id === 2 && e.chating !== \"\" && \r\n                                <s.YouChat>\r\n                                    <p>{you}</p>\r\n                                    <s.YouContainer>{e.chating}</s.YouContainer>\r\n                                </s.YouChat>\r\n                            }\r\n                            {e.id === 3 && e.chating !==\"\" &&\r\n                                <s.Img \r\n                                    src={e.chating} \r\n                                    alt=\"\"\r\n                                    onClick={()=>{\r\n                                        window.open(e.chating)\r\n                                    }}\r\n                                />\r\n                            }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </s.ChatingContainer>\r\n            <s.InputContainer>\r\n                {\r\n                    match === false ? \r\n                    <form onSubmit={Send}>\r\n                        <s.Input\r\n                            placeholder=\"매칭 후 입력 가능합니다.\"\r\n                            onChange={ChatingSave}\r\n                            value={data}\r\n                            readOnly\r\n                        />\r\n                    </form>\r\n                    :\r\n                    <form onSubmit={Send}>\r\n                        <s.Input\r\n                            placeholder=\"보낼 내용을 입력하세요.\"\r\n                            onChange={ChatingSave}\r\n                            value={data}\r\n                        />\r\n                    </form>\r\n                }\r\n                <form onChange={upload} action=\"upload\" id=\"uploadForm\" method=\"post\" encType=\"multipart/form-data\">\r\n                        <input type=\"file\" name=\"file\" id=\"file\" style={{display:\"none\"}}/>\r\n                </form>\r\n                <s.MenuBar>\r\n                    <s.MenuBtn\r\n                        onClick={()=>{\r\n                            window.location.href = \"/\"\r\n                        }}\r\n                    ># 채팅종료</s.MenuBtn>\r\n                    <s.MenuBtn onClick={ReportModalOn}># 신고하기</s.MenuBtn>\r\n                    <s.MenuBtn\r\n                        onClick={()=>{\r\n                            document.all.file.click();\r\n                        }}\r\n                    ># 파일전송</s.MenuBtn>\r\n{/*                     {\r\n                        out &&                     \r\n                        <s.MenuBtn\r\n                            onClick={Search}\r\n                            style={{backgroundColor:\"tomato\", color:\"white\"}}\r\n                        ># 상대찾기</s.MenuBtn>\r\n                    } */}\r\n                </s.MenuBar>\r\n            </s.InputContainer>\r\n        </s.MainContainer>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ChatingComponent","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\mypage.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MYPAGE\\styles.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":50,"nodeType":"110","messageId":"111","endLine":15,"endColumn":52},{"ruleId":"112","severity":1,"message":"113","line":22,"column":8,"nodeType":"114","endLine":22,"endColumn":44},{"ruleId":"108","severity":1,"message":"109","line":33,"column":42,"nodeType":"110","messageId":"111","endLine":33,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":30,"column":49,"nodeType":"117","endLine":30,"endColumn":306},{"ruleId":"118","severity":1,"message":"119","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":19},{"ruleId":"108","severity":1,"message":"122","line":74,"column":18,"nodeType":"110","messageId":"111","endLine":74,"endColumn":20},{"ruleId":"108","severity":1,"message":"122","line":57,"column":49,"nodeType":"110","messageId":"111","endLine":57,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":61,"column":49,"nodeType":"110","messageId":"111","endLine":61,"endColumn":51},{"ruleId":"112","severity":1,"message":"123","line":67,"column":7,"nodeType":"124","endLine":67,"endColumn":9,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":148,"column":7,"nodeType":"124","endLine":148,"endColumn":12,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"126","line":155,"column":7,"nodeType":"124","endLine":155,"endColumn":12,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"126","line":174,"column":7,"nodeType":"124","endLine":174,"endColumn":13,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'Chating'. Either include it or remove the dependency array. You can also do a functional update 'setChating(C => ...)' if you only need 'Chating' in the 'setChating' call.",["133"],["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [history]",{"range":"144","text":"145"},"Update the dependencies array to be: [Chating, url]",{"range":"146","text":"147"},"Update the dependencies array to be: [Chating, msg]",{"range":"148","text":"149"},"Update the dependencies array to be: [Chating, file]",{"range":"150","text":"151"},[1652,1654],"[history]",[3739,3744],"[Chating, url]",[3870,3875],"[Chating, msg]",[4242,4248],"[Chating, file]"]