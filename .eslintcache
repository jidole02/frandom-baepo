[{"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js":"1","C:\\Users\\user\\Desktop\\translationchating\\src\\App.js":"2","C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js":"4","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js":"5","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js":"6","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js":"7","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js":"8","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js":"9","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js":"10","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js":"11","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js":"12","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js":"13","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js":"14","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js":"15","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js":"16","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js":"17","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js":"18","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js":"19","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\CHATINGPAGE\\chatingPage.js":"20"},{"size":517,"mtime":1610713796477,"results":"21","hashOfConfig":"22"},{"size":928,"mtime":1614441400394,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1610713796498,"results":"24","hashOfConfig":"22"},{"size":388,"mtime":1611121041424,"results":"25","hashOfConfig":"22"},{"size":4013,"mtime":1614169866051,"results":"26","hashOfConfig":"22"},{"size":69,"mtime":1614143589532,"results":"27","hashOfConfig":"22"},{"size":388,"mtime":1614142935886,"results":"28","hashOfConfig":"22"},{"size":1082,"mtime":1613395684464,"results":"29","hashOfConfig":"22"},{"size":2335,"mtime":1614441440956,"results":"30","hashOfConfig":"22"},{"size":817,"mtime":1614146499901,"results":"31","hashOfConfig":"22"},{"size":1155,"mtime":1614441701781,"results":"32","hashOfConfig":"22"},{"size":1590,"mtime":1614147395691,"results":"33","hashOfConfig":"22"},{"size":2525,"mtime":1614435959303,"results":"34","hashOfConfig":"22"},{"size":1164,"mtime":1614148658404,"results":"35","hashOfConfig":"22"},{"size":3257,"mtime":1614397021809,"results":"36","hashOfConfig":"22"},{"size":1258,"mtime":1614165648059,"results":"37","hashOfConfig":"22"},{"size":9320,"mtime":1614441748598,"results":"38","hashOfConfig":"22"},{"size":4976,"mtime":1614441631327,"results":"39","hashOfConfig":"22"},{"size":2161,"mtime":1614397769529,"results":"40","hashOfConfig":"22"},{"size":11470,"mtime":1614078283490,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"d9k3yh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js",[],["84","85"],"C:\\Users\\user\\Desktop\\translationchating\\src\\App.js",["86"],"C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js",["87"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js",["88","89","90","91"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\CHATINGPAGE\\chatingPage.js",["92","93"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport * as c from '../STYLECOMPONENT/chatingStyle'\r\nimport { io } from \"socket.io-client\";\r\nimport {Request} from '../axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst socket = io(\"wss://sonchaegeon.shop\", {\r\n    query: {\r\n        token: \"Bearer \" + window.localStorage.getItem(\"token\")\r\n    }\r\n});\r\nconst ChatingPage = React.memo((Lang) => {\r\n    const history = useHistory()\r\n    const a = Lang.Lang;\r\n    const ChatingDiv = useRef();\r\n    // 밤 낮 모드\r\n    const [mode, setMode] = useState();\r\n    const DarkMode = () => {\r\n        setMode('dark')\r\n    }\r\n    const LightMode = () => {\r\n        setMode('light')\r\n    }\r\n    // 채팅 내용\r\n    const [Chating, setChating] = useState([])\r\n    // 내가 쓰는 거 임시 저장용\r\n    const [data, setData] = useState(\"\");\r\n    // 상대방 이름\r\n    const [name, setName] = useState(\"\")\r\n    // 상대방 메세지 받아오는 거\r\n    const [msg, setMsg] = useState(\"\");\r\n    // 찾았나 못찾았나 모달 띄울 용도\r\n    const [find, setFined] = useState(false);\r\n    // 떠났나 안떠났나\r\n    // 떠나면 인풋 값도 초기화 해줘야됨,,,\r\n    const [leave,setLeave] = useState(false);\r\n    // 매치 됬나 안됬나\r\n    const [match,setMatch] = useState(false);\r\n    // 떠나면 알람 띄우는 용도\r\n    const [leaveAlr,setLeaveAlr] = useState(false)\r\n    // 신고 사유\r\n    const [reportData,setReportData] = useState({\r\n        title:\"\",\r\n        cause:\"\"\r\n    })\r\n    // 모달 띄우는 용도\r\n    const [modalOn,setModalOn] = useState(false);\r\n    // 신고 입력 인풋 관리용\r\n    const Report =(e)=>{\r\n        const {name,value} = e.target;\r\n        setReportData({\r\n            ...reportData,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(window.localStorage.getItem(\"token\").length === 1){\r\n            history.push(\"/\")\r\n        }\r\n            // 소켓 연결\r\n            socket.on(\"connect\", () => {\r\n                console.log(\"connect\");\r\n                socket.emit(\"search\");\r\n            });\r\n\r\n            socket.on(\"disconnect\", () => {\r\n                console.log(\"disconnect\");\r\n            });\r\n            // 방 찾기  \r\n            socket.emit(\"search\", () => {\r\n                console.log(\"search\");\r\n            });\r\n\r\n            // 조인 룸\r\n            socket.on(\"joinRoom\", (nickname) => {\r\n                setName(nickname)\r\n                socket.on(\"matched\", () => {\r\n                    setLeaveAlr(false)\r\n                    setMatch(true)\r\n                    setFined(true);\r\n                    setTimeout(()=>{\r\n                        setFined(false);\r\n                    },1500)\r\n                })\r\n            })\r\n            socket.on(\"matched\", () => {\r\n                setLeaveAlr(false)\r\n                setMatch(true)\r\n                setFined(true)\r\n                setTimeout(()=>{\r\n                    setFined(false);\r\n                },1500)\r\n            })\r\n            socket.on(\"leaveRoom\",()=>{\r\n                setLeaveAlr(true)\r\n                setFined(false)\r\n                setMatch(false)\r\n                setLeave(true)\r\n            }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // 메세지 받기\r\n        socket.on(\"receiveMessage\", (e,err) => {\r\n            setMsg(e);\r\n        })\r\n    }, [])\r\n    // 상대방 메세지 받아오기 \r\n    // 이렇게 안하면 루프 존나 걸림\r\n    useEffect(() => {\r\n        setChating([\r\n            ...Chating,\r\n            { you: msg }\r\n        ])\r\n    }, [msg])\r\n    // 채팅 스크롤 아래로 유지하게\r\n    useEffect(()=>{\r\n        ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n    },[Chating])\r\n    // 신고 버튼\r\n    const report =()=>{\r\n        Request(\"POST\", \"v1/user/report\",{\"Content-type\":\"application/json\", \"Authorization\":\"Bearer \" + window.localStorage.getItem(\"token\")}, \r\n        {\r\n            title : reportData.title,\r\n            description : reportData.cause\r\n        }).then(()=>{\r\n            setModalOn(false)\r\n            alert(\"정상적으로 신고되었습니다.\")\r\n        }).catch(()=>{\r\n            setModalOn(false)\r\n            alert(\"신고 에러가 났습니다\")\r\n        })\r\n    }\r\n    // 여기서 내가 보내는 메세지 받고 엔터 치면 넘기는 방식\r\n    const Sub = (e) => {\r\n        setData(e.target.value);\r\n    }\r\n    // 내가 보내는 거\r\n    const SendInput = (e) => {\r\n        e.preventDefault();\r\n        setChating([\r\n            ...Chating,\r\n            { me: data }\r\n        ])\r\n        socket.emit(\"sendMessage\", data)\r\n        // 다시 내 메세지 받아야 되니까 초기화\r\n        setData(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {modalOn && \r\n                <c.ModalWrapper>\r\n                <p>신고하기</p>\r\n                <c.ReportInput\r\n                    placeholder=\"신고 제목을 입력하세요.\"\r\n                    onChange={Report}\r\n                    name=\"title\"\r\n                    value={reportData.title}\r\n                />\r\n                <c.ReportText\r\n                    placeholder=\"신고 사유를 입력하세요.\"\r\n                    onChange={Report}\r\n                    name=\"cause\"\r\n                    value={reportData.cause}\r\n                />\r\n                <c.ReportBtnCont>\r\n                        <button\r\n                            onClick={()=>setModalOn(false)}\r\n                        >취소</button>\r\n                        <button\r\n                            onClick={report}\r\n                        >신고</button>\r\n                </c.ReportBtnCont>\r\n            </c.ModalWrapper>\r\n        }\r\n\r\n        <c.Modal\r\n                style={find?{display:\"flex\"}\r\n                :leave?{display:\"flex\"}\r\n                :{display:\"none\"}}        \r\n        >\r\n            <c.ModalCont>\r\n                {find && \"상대방이 매치되었습니다!\"}\r\n                {leave && <><p> 상대방이 나갔습니다.</p>\r\n                <div style={{display:\"flex\"}}>\r\n                    <button\r\n                        onClick={()=>{\r\n                            setChating([])\r\n                            // 셋 리브 해야 모달 사라짐\r\n                            setLeave(false);\r\n                            // 다시 검색 기기\r\n                            socket.emit(\"search\", () => {\r\n                                console.log(\"search\");\r\n                            });\r\n                        }}\r\n                    >상대 찾기\r\n\r\n                    </button> \r\n                    <button\r\n                        onClick={() => { window.location.href = \"/match\" }}\r\n                    >나가기</button>\r\n                </div>\r\n                </>}\r\n            </c.ModalCont>\r\n        </c.Modal>\r\n        <c.ChatingBox style={{ backgroundColor: (mode === 'dark') ? 'rgb(70,70,70)' : '' }}>\r\n            <c.SideBar style={{ backgroundColor: (mode === 'dark') ? 'rgb(50,50,50)' : '' }}>\r\n                <c.SettingChat>\r\n                    <c.SettingMenu>\r\n                        <i className=\"fas fa-cloud-moon\"></i> {(a === 0) ? \"COLOR THEME\" : \"색상 테마\"}\r\n                    </c.SettingMenu>\r\n                    <c.SettingChoose style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }} onClick={DarkMode}><i className=\"fas fa-moon\"></i>{(a === 0) ? \"DARK MODE\" : \"어두운 테마\"}</c.SettingChoose>\r\n                    <c.SettingChoose style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }} onClick={LightMode}><i className=\"fas fa-sun\"></i>{(a === 0) ? \"LIGHT MODE\" : \"밝은 테마\"}</c.SettingChoose>\r\n                    <c.SettingMenu>\r\n                        <i className=\"fas fa-cog\"></i>{(a === 0) ? \"SETTING\" : \"설정\"}\r\n                    </c.SettingMenu>\r\n                    <c.SettingChoose onClick={()=>setModalOn(true)} style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}><i className=\"fas fa-exclamation\"></i>{(a === 0) ? \"REPORT\" : \"신고하기\"}</c.SettingChoose>\r\n                    <c.SettingChoose\r\n                        onClick={() => { window.location.href = \"/match\" }}\r\n                        style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}><i className=\"fas fa-sign-out-alt\"></i>{(a === 0) ? \"EXIT\" : \"나가기\"}\r\n                    </c.SettingChoose>\r\n{/*                     <c.SettingChoose\r\n                        onClick={() => {\r\n                            window.localStorage.setItem(\"token\", \" \")\r\n                            window.location.href = \"/\";\r\n                        }}\r\n                        style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}>{(a === 0) ? \"LOGOUT\" : \"로그아웃\"}</c.SettingChoose> */}\r\n                </c.SettingChat>\r\n            </c.SideBar>\r\n            <c.ChatingContainer ref={ChatingDiv}>\r\n                <c.Chating>\r\n                    <c.Alram>\r\n                        <p>랜덤채팅 상대를 찾고 있습니다....</p>\r\n                        <p>{match && \"상대방을 찾았습니다.\"}</p>\r\n                        <p>{leaveAlr && \"상대방이 나갔습니다.\"}</p> \r\n                        <p>{(match) && name !== \"\" && name + \" 님이 들어왔습니다.\"}</p>\r\n                    </c.Alram>\r\n                    {Chating.map((res, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {res.me !== \"\" && res.me !== undefined && <c.MyChating>{res.me}</c.MyChating>}\r\n                                {res.you !== \"\" && res.you !== undefined && <c.YouChating>{res.you}</c.YouChating>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </c.Chating>\r\n            </c.ChatingContainer>\r\n            <c.UnderBar style={{ backgroundColor: (mode === 'dark') ? 'rgb(50,50,50)' : '' }}>\r\n                <c.InputChatBox onSubmit={SendInput}>\r\n                    \r\n\r\n                    {\r\n                        (match) ? (\r\n                            <c.InputChat \r\n                                value={data} \r\n                                onChange={Sub} \r\n                                style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '', color: (mode === 'dark') ? 'whitesmoke' : '', border: (mode === 'dark') ? 'none' : '' }} \r\n                                placeholder=\"보낼 내용을 입력하세요!\"\r\n                            />\r\n                        )\r\n                        :\r\n                        (\r\n                            <c.InputChat \r\n                                value={data} \r\n                                style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '', color: (mode === 'dark') ? 'whitesmoke' : '', border: (mode === 'dark') ? 'none' : '' }} \r\n                                placeholder=\"매칭되면 입력 가능합니다.\"\r\n                                readOnly\r\n                            />\r\n                        )\r\n                    }\r\n                    {/*                     <c.SendChatBtn onClick={Send} style={{ border: (mode === 'dark') ? 'none' : '' }}><i className=\"fas fa-paper-plane\"></i></c.SendChatBtn> */}\r\n                </c.InputChatBox>\r\n            </c.UnderBar>\r\n        </c.ChatingBox>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default ChatingPage;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":16,"column":8,"nodeType":"104","endLine":16,"endColumn":44},{"ruleId":"98","severity":1,"message":"105","line":41,"column":12,"nodeType":"100","messageId":"101","endLine":41,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":137,"column":7,"nodeType":"107","endLine":137,"endColumn":12,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"106","line":144,"column":7,"nodeType":"107","endLine":144,"endColumn":12,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"106","line":164,"column":7,"nodeType":"107","endLine":164,"endColumn":13,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":101,"column":8,"nodeType":"107","endLine":101,"endColumn":10,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"106","line":116,"column":8,"nodeType":"107","endLine":116,"endColumn":13,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'find' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Chating'. Either include it or remove the dependency array. You can also do a functional update 'setChating(C => ...)' if you only need 'Chating' in the 'setChating' call.","ArrayExpression",["116"],["117"],["118"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["119"],["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"123","fix":"129"},"Update the dependencies array to be: [Chating, url]",{"range":"130","text":"131"},"Update the dependencies array to be: [Chating, msg]",{"range":"132","text":"133"},"Update the dependencies array to be: [Chating, file]",{"range":"134","text":"135"},"Update the dependencies array to be: [history]",{"range":"136","text":"137"},{"range":"138","text":"133"},[3380,3385],"[Chating, url]",[3511,3516],"[Chating, msg]",[3906,3912],"[Chating, file]",[3003,3005],"[history]",[3312,3317]]