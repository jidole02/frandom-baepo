[{"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js":"1","C:\\Users\\user\\Desktop\\translationchating\\src\\App.js":"2","C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js":"4","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\MATCH\\match.js":"5","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\CHATINGPAGE\\chatingPage.js":"6","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js":"7","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\nicknamePage.js":"8","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\SIGNUP\\signup.js":"9","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\FIRSTPAGE\\firstPage.js":"10","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\MATCH\\styles.js":"11","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\chatingStyle.js":"12","C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js":"13","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js":"14","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js":"15","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js":"16","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js":"17","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js":"18","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js":"19","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js":"20","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js":"21","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js":"22","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js":"23","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js":"24","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js":"25","C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js":"26"},{"size":517,"mtime":1610713796477,"results":"27","hashOfConfig":"28"},{"size":2476,"mtime":1614168351442,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1610713796498,"results":"30","hashOfConfig":"28"},{"size":388,"mtime":1611121041424,"results":"31","hashOfConfig":"28"},{"size":791,"mtime":1613928692424,"results":"32","hashOfConfig":"28"},{"size":11470,"mtime":1614078283490,"results":"33","hashOfConfig":"28"},{"size":4013,"mtime":1614169866051,"results":"34","hashOfConfig":"28"},{"size":2619,"mtime":1613927914518,"results":"35","hashOfConfig":"28"},{"size":2500,"mtime":1613927917427,"results":"36","hashOfConfig":"28"},{"size":1318,"mtime":1613928699455,"results":"37","hashOfConfig":"28"},{"size":616,"mtime":1613395095900,"results":"38","hashOfConfig":"28"},{"size":5725,"mtime":1613915688680,"results":"39","hashOfConfig":"28"},{"size":69,"mtime":1614143589532,"results":"40","hashOfConfig":"28"},{"size":388,"mtime":1614142935886,"results":"41","hashOfConfig":"28"},{"size":1082,"mtime":1613395684464,"results":"42","hashOfConfig":"28"},{"size":2162,"mtime":1614397602260,"results":"43","hashOfConfig":"28"},{"size":817,"mtime":1614146499901,"results":"44","hashOfConfig":"28"},{"size":1074,"mtime":1614146746133,"results":"45","hashOfConfig":"28"},{"size":1590,"mtime":1614147395691,"results":"46","hashOfConfig":"28"},{"size":1981,"mtime":1614397069027,"results":"47","hashOfConfig":"28"},{"size":1164,"mtime":1614148658404,"results":"48","hashOfConfig":"28"},{"size":3257,"mtime":1614397021809,"results":"49","hashOfConfig":"28"},{"size":1258,"mtime":1614165648059,"results":"50","hashOfConfig":"28"},{"size":6219,"mtime":1614399381540,"results":"51","hashOfConfig":"28"},{"size":4897,"mtime":1614255351640,"results":"52","hashOfConfig":"28"},{"size":2161,"mtime":1614397769529,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"d9k3yh",{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\translationchating\\src\\index.js",[],["111","112"],"C:\\Users\\user\\Desktop\\translationchating\\src\\App.js",["113","114","115","116","117","118","119","120","121","122"],"C:\\Users\\user\\Desktop\\translationchating\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\globalstyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\MATCH\\match.js",["123"],"import React from 'react'\r\nimport * as s from './styles'\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nconst Match=()=>{\r\n    const history = useHistory();\r\n    return(\r\n        <s.Background>\r\n            <s.Title>FRANDOM!</s.Title>\r\n            <s.MatchButton\r\n                onClick={()=>{\r\n                    history.push('/chating')\r\n                }}\r\n            >랜덤채팅 시작!</s.MatchButton>\r\n            <div id='mobonDivBanner_511410'><iframe name='ifrad' id='mobonIframe_511410' src='//www.mediacategory.com/servlet/adBanner?from=\"+escape(document.referrer)+\"&s=511410&igb=75&iwh=640_107&cntad=1&cntsr=3' frameBorder='0' scrolling='no' style={{height:\"107px\", width:\"640px\",marginTop:\"5%\"}}></iframe></div>\r\n        </s.Background>\r\n    )\r\n}\r\n\r\nexport default Match;","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\CHATINGPAGE\\chatingPage.js",["124","125"],"import React, { useState, useEffect,useRef } from 'react';\r\nimport * as c from '../STYLECOMPONENT/chatingStyle'\r\nimport { io } from \"socket.io-client\";\r\nimport {Request} from '../axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst socket = io(\"wss://sonchaegeon.shop\", {\r\n    query: {\r\n        token: \"Bearer \" + window.localStorage.getItem(\"token\")\r\n    }\r\n});\r\nconst ChatingPage = React.memo((Lang) => {\r\n    const history = useHistory()\r\n    const a = Lang.Lang;\r\n    const ChatingDiv = useRef();\r\n    // 밤 낮 모드\r\n    const [mode, setMode] = useState();\r\n    const DarkMode = () => {\r\n        setMode('dark')\r\n    }\r\n    const LightMode = () => {\r\n        setMode('light')\r\n    }\r\n    // 채팅 내용\r\n    const [Chating, setChating] = useState([])\r\n    // 내가 쓰는 거 임시 저장용\r\n    const [data, setData] = useState(\"\");\r\n    // 상대방 이름\r\n    const [name, setName] = useState(\"\")\r\n    // 상대방 메세지 받아오는 거\r\n    const [msg, setMsg] = useState(\"\");\r\n    // 찾았나 못찾았나 모달 띄울 용도\r\n    const [find, setFined] = useState(false);\r\n    // 떠났나 안떠났나\r\n    // 떠나면 인풋 값도 초기화 해줘야됨,,,\r\n    const [leave,setLeave] = useState(false);\r\n    // 매치 됬나 안됬나\r\n    const [match,setMatch] = useState(false);\r\n    // 떠나면 알람 띄우는 용도\r\n    const [leaveAlr,setLeaveAlr] = useState(false)\r\n    // 신고 사유\r\n    const [reportData,setReportData] = useState({\r\n        title:\"\",\r\n        cause:\"\"\r\n    })\r\n    // 모달 띄우는 용도\r\n    const [modalOn,setModalOn] = useState(false);\r\n    // 신고 입력 인풋 관리용\r\n    const Report =(e)=>{\r\n        const {name,value} = e.target;\r\n        setReportData({\r\n            ...reportData,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(window.localStorage.getItem(\"token\").length === 1){\r\n            history.push(\"/\")\r\n        }\r\n            // 소켓 연결\r\n            socket.on(\"connect\", () => {\r\n                console.log(\"connect\");\r\n                socket.emit(\"search\");\r\n            });\r\n\r\n            socket.on(\"disconnect\", () => {\r\n                console.log(\"disconnect\");\r\n            });\r\n            // 방 찾기  \r\n            socket.emit(\"search\", () => {\r\n                console.log(\"search\");\r\n            });\r\n\r\n            // 조인 룸\r\n            socket.on(\"joinRoom\", (nickname) => {\r\n                setName(nickname)\r\n                socket.on(\"matched\", () => {\r\n                    setLeaveAlr(false)\r\n                    setMatch(true)\r\n                    setFined(true);\r\n                    setTimeout(()=>{\r\n                        setFined(false);\r\n                    },1500)\r\n                })\r\n            })\r\n            socket.on(\"matched\", () => {\r\n                setLeaveAlr(false)\r\n                setMatch(true)\r\n                setFined(true)\r\n                setTimeout(()=>{\r\n                    setFined(false);\r\n                },1500)\r\n            })\r\n            socket.on(\"leaveRoom\",()=>{\r\n                setLeaveAlr(true)\r\n                setFined(false)\r\n                setMatch(false)\r\n                setLeave(true)\r\n            }) \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // 메세지 받기\r\n        socket.on(\"receiveMessage\", (e,err) => {\r\n            setMsg(e);\r\n        })\r\n    }, [])\r\n    // 상대방 메세지 받아오기 \r\n    // 이렇게 안하면 루프 존나 걸림\r\n    useEffect(() => {\r\n        setChating([\r\n            ...Chating,\r\n            { you: msg }\r\n        ])\r\n    }, [msg])\r\n    // 채팅 스크롤 아래로 유지하게\r\n    useEffect(()=>{\r\n        ChatingDiv.current.scrollTop = ChatingDiv.current.scrollHeight;\r\n    },[Chating])\r\n    // 신고 버튼\r\n    const report =()=>{\r\n        Request(\"POST\", \"v1/user/report\",{\"Content-type\":\"application/json\", \"Authorization\":\"Bearer \" + window.localStorage.getItem(\"token\")}, \r\n        {\r\n            title : reportData.title,\r\n            description : reportData.cause\r\n        }).then(()=>{\r\n            setModalOn(false)\r\n            alert(\"정상적으로 신고되었습니다.\")\r\n        }).catch(()=>{\r\n            setModalOn(false)\r\n            alert(\"신고 에러가 났습니다\")\r\n        })\r\n    }\r\n    // 여기서 내가 보내는 메세지 받고 엔터 치면 넘기는 방식\r\n    const Sub = (e) => {\r\n        setData(e.target.value);\r\n    }\r\n    // 내가 보내는 거\r\n    const SendInput = (e) => {\r\n        e.preventDefault();\r\n        setChating([\r\n            ...Chating,\r\n            { me: data }\r\n        ])\r\n        socket.emit(\"sendMessage\", data)\r\n        // 다시 내 메세지 받아야 되니까 초기화\r\n        setData(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {modalOn && \r\n                <c.ModalWrapper>\r\n                <p>신고하기</p>\r\n                <c.ReportInput\r\n                    placeholder=\"신고 제목을 입력하세요.\"\r\n                    onChange={Report}\r\n                    name=\"title\"\r\n                    value={reportData.title}\r\n                />\r\n                <c.ReportText\r\n                    placeholder=\"신고 사유를 입력하세요.\"\r\n                    onChange={Report}\r\n                    name=\"cause\"\r\n                    value={reportData.cause}\r\n                />\r\n                <c.ReportBtnCont>\r\n                        <button\r\n                            onClick={()=>setModalOn(false)}\r\n                        >취소</button>\r\n                        <button\r\n                            onClick={report}\r\n                        >신고</button>\r\n                </c.ReportBtnCont>\r\n            </c.ModalWrapper>\r\n        }\r\n\r\n        <c.Modal\r\n                style={find?{display:\"flex\"}\r\n                :leave?{display:\"flex\"}\r\n                :{display:\"none\"}}        \r\n        >\r\n            <c.ModalCont>\r\n                {find && \"상대방이 매치되었습니다!\"}\r\n                {leave && <><p> 상대방이 나갔습니다.</p>\r\n                <div style={{display:\"flex\"}}>\r\n                    <button\r\n                        onClick={()=>{\r\n                            setChating([])\r\n                            // 셋 리브 해야 모달 사라짐\r\n                            setLeave(false);\r\n                            // 다시 검색 기기\r\n                            socket.emit(\"search\", () => {\r\n                                console.log(\"search\");\r\n                            });\r\n                        }}\r\n                    >상대 찾기\r\n\r\n                    </button> \r\n                    <button\r\n                        onClick={() => { window.location.href = \"/match\" }}\r\n                    >나가기</button>\r\n                </div>\r\n                </>}\r\n            </c.ModalCont>\r\n        </c.Modal>\r\n        <c.ChatingBox style={{ backgroundColor: (mode === 'dark') ? 'rgb(70,70,70)' : '' }}>\r\n            <c.SideBar style={{ backgroundColor: (mode === 'dark') ? 'rgb(50,50,50)' : '' }}>\r\n                <c.SettingChat>\r\n                    <c.SettingMenu>\r\n                        <i className=\"fas fa-cloud-moon\"></i> {(a === 0) ? \"COLOR THEME\" : \"색상 테마\"}\r\n                    </c.SettingMenu>\r\n                    <c.SettingChoose style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }} onClick={DarkMode}><i className=\"fas fa-moon\"></i>{(a === 0) ? \"DARK MODE\" : \"어두운 테마\"}</c.SettingChoose>\r\n                    <c.SettingChoose style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }} onClick={LightMode}><i className=\"fas fa-sun\"></i>{(a === 0) ? \"LIGHT MODE\" : \"밝은 테마\"}</c.SettingChoose>\r\n                    <c.SettingMenu>\r\n                        <i className=\"fas fa-cog\"></i>{(a === 0) ? \"SETTING\" : \"설정\"}\r\n                    </c.SettingMenu>\r\n                    <c.SettingChoose onClick={()=>setModalOn(true)} style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}><i className=\"fas fa-exclamation\"></i>{(a === 0) ? \"REPORT\" : \"신고하기\"}</c.SettingChoose>\r\n                    <c.SettingChoose\r\n                        onClick={() => { window.location.href = \"/match\" }}\r\n                        style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}><i className=\"fas fa-sign-out-alt\"></i>{(a === 0) ? \"EXIT\" : \"나가기\"}\r\n                    </c.SettingChoose>\r\n{/*                     <c.SettingChoose\r\n                        onClick={() => {\r\n                            window.localStorage.setItem(\"token\", \" \")\r\n                            window.location.href = \"/\";\r\n                        }}\r\n                        style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '' }}>{(a === 0) ? \"LOGOUT\" : \"로그아웃\"}</c.SettingChoose> */}\r\n                </c.SettingChat>\r\n            </c.SideBar>\r\n            <c.ChatingContainer ref={ChatingDiv}>\r\n                <c.Chating>\r\n                    <c.Alram>\r\n                        <p>랜덤채팅 상대를 찾고 있습니다....</p>\r\n                        <p>{match && \"상대방을 찾았습니다.\"}</p>\r\n                        <p>{leaveAlr && \"상대방이 나갔습니다.\"}</p> \r\n                        <p>{(match) && name !== \"\" && name + \" 님이 들어왔습니다.\"}</p>\r\n                    </c.Alram>\r\n                    {Chating.map((res, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                {res.me !== \"\" && res.me !== undefined && <c.MyChating>{res.me}</c.MyChating>}\r\n                                {res.you !== \"\" && res.you !== undefined && <c.YouChating>{res.you}</c.YouChating>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </c.Chating>\r\n            </c.ChatingContainer>\r\n            <c.UnderBar style={{ backgroundColor: (mode === 'dark') ? 'rgb(50,50,50)' : '' }}>\r\n                <c.InputChatBox onSubmit={SendInput}>\r\n                    \r\n\r\n                    {\r\n                        (match) ? (\r\n                            <c.InputChat \r\n                                value={data} \r\n                                onChange={Sub} \r\n                                style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '', color: (mode === 'dark') ? 'whitesmoke' : '', border: (mode === 'dark') ? 'none' : '' }} \r\n                                placeholder=\"보낼 내용을 입력하세요!\"\r\n                            />\r\n                        )\r\n                        :\r\n                        (\r\n                            <c.InputChat \r\n                                value={data} \r\n                                style={{ backgroundColor: (mode === 'dark') ? 'rgb(100,100,100)' : '', color: (mode === 'dark') ? 'whitesmoke' : '', border: (mode === 'dark') ? 'none' : '' }} \r\n                                placeholder=\"매칭되면 입력 가능합니다.\"\r\n                                readOnly\r\n                            />\r\n                        )\r\n                    }\r\n                    {/*                     <c.SendChatBtn onClick={Send} style={{ border: (mode === 'dark') ? 'none' : '' }}><i className=\"fas fa-paper-plane\"></i></c.SendChatBtn> */}\r\n                </c.InputChatBox>\r\n            </c.UnderBar>\r\n        </c.ChatingBox>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default ChatingPage;","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\publicStyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\nicknamePage.js",["126"],"import React, { useState } from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport * as f from '../STYLECOMPONENT/publicStyle'\r\nimport {Request} from '../axios'\r\nimport Loading from '../PUBLIC/loading'\r\nimport axios from 'axios'\r\n\r\nfunction NicknamePage(Lang){\r\n    const a = Lang.Lang;\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        id : \"\",\r\n        password: \"\"\r\n    });\r\n    const [toggle,setToggle] = useState(false);\r\n    const Input=(e)=>{\r\n        const {value, name} = e.target;\r\n        setData({\r\n            ...data,\r\n            [name] : value\r\n        })\r\n    }\r\n    const SubInputValue =()=>{\r\n        setToggle(true)\r\n/*         Request(\"POST\", \"v1/auth/login\",{\"Content-type\":\"application/json\"}, \r\n        {\r\n            \"email\" : data.id,\r\n            \"password\" : data.password\r\n        }).then((e)=>{\r\n            window.localStorage.setItem(\"token\", e.data.accessToken)\r\n            window.location.href = \"/match\" \r\n        }).catch((err)=>{\r\n            console.log(err)    \r\n            setToggle(false)\r\n            window.alert(\"아이디 혹은 비밀번호를 확인해주세요.\")\r\n        })\r\n */\r\n        axios({\r\n            method:\"post\",\r\n            url:\"https://sonchaegeon.shop/v1/auth/login\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            data:{\r\n                \"email\" : data.id,\r\n                \"password\" : data.password\r\n            }\r\n        }).then((e)=>{\r\n            window.localStorage.setItem(\"token\", e.data.accessToken)\r\n            history.push('/match')\r\n        }).catch((err)=>{\r\n            window.alert(err.response.data.error.message)\r\n            setToggle(false)\r\n        }) \r\n    }\r\n    return(\r\n        <>\r\n            { toggle && <Loading></Loading> }\r\n            <f.FirstPageContainer>\r\n                <h1> FRANDOM!</h1>\r\n                <f.NicknameInput onChange={Input} name=\"id\" value={data.id} placeholder={(a===0)?\"NICKNAME\" : \"이메일을 입력하세요.\"}></f.NicknameInput>\r\n                <f.NicknameInput onChange={Input} name=\"password\" type=\"password\" value={data.password} placeholder={(a===0)?\"NICKNAME\" : \"비밀번호를 입력하세요.\"}></f.NicknameInput>\r\n                <f.ButtonContainer2>\r\n                <f.NickSubButton onClick={SubInputValue}>{(a===0)?\"SUBMIT\" : \"제출하기\"}</f.NickSubButton>\r\n                </f.ButtonContainer2>\r\n                <Link to=\"/signup\"><h3>계정이 없으신가요?</h3></Link>\r\n            </f.FirstPageContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NicknamePage;","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\SIGNUP\\signup.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\FIRSTPAGE\\firstPage.js",["127"],"import React, { useEffect } from 'react';\r\nimport * as f from '../STYLECOMPONENT/publicStyle'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction FirstPage(Lang){\r\n    const a = Lang.Lang;\r\n    const LinkStyle = {position:\"relative\", width:\"100%\", height:\"100%\"}\r\n    useEffect(()=>{\r\n        window.localStorage.setItem(\"token\",\" \")\r\n    })\r\n    return(\r\n        <f.FirstPageContainer>\r\n            <h1> FRANDOM!</h1>\r\n            <h3>{(a===0)?\"Enjoy random chat\" : \"랜덤채팅을 즐겨보세요!\"}</h3>\r\n            <f.ButtonContainer>\r\n                <Link style={LinkStyle} to=\"/nickname\"><f.StartButton>{(a===0)?\"GET START\" : \"로그인\"}</f.StartButton></Link> \r\n            </f.ButtonContainer>\r\n            <f.ButtonContainer style={{marginTop:\"1%\"}}>\r\n                <Link style={LinkStyle} to=\"/signup\"><f.StartButton>{(a===0)?\"GET START\" : \"회원가입\"}</f.StartButton></Link> \r\n            </f.ButtonContainer>\r\n            <div id='mobonDivBanner_511410'><iframe name='ifrad' id='mobonIframe_511410' src='//www.mediacategory.com/servlet/adBanner?from=\"+escape(document.referrer)+\"&s=511410&igb=75&iwh=640_107&cntad=1&cntsr=3' frameBorder='0' scrolling='no' style={{height:\"107px\", width:\"640px\",marginTop:\"5%\"}}></iframe></div>\r\n        </f.FirstPageContainer>\r\n    )\r\n}\r\n\r\nexport default FirstPage;","C:\\Users\\user\\Desktop\\translationchating\\src\\components\\MATCH\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\STYLECOMPONENT\\chatingStyle.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\style\\index.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\axios.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\components\\PUBLIC\\loading.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\header.js",["128"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\HEADER\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\main.js",["129","130"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\MAIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\login.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\LOGIN\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\signup.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\SIGNUP\\styles.js",[],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\chating.js",["131","132","133","134","135"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\styles.js",["136"],"C:\\Users\\user\\Desktop\\translationchating\\src\\New\\CHATING\\reportModal.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":17},{"ruleId":"141","severity":1,"message":"146","line":4,"column":30,"nodeType":"143","messageId":"144","endLine":4,"endColumn":36},{"ruleId":"141","severity":1,"message":"147","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":20},{"ruleId":"141","severity":1,"message":"148","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":10},{"ruleId":"141","severity":1,"message":"149","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":10},{"ruleId":"141","severity":1,"message":"150","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":10},{"ruleId":"141","severity":1,"message":"151","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":19},{"ruleId":"141","severity":1,"message":"152","line":11,"column":8,"nodeType":"143","messageId":"144","endLine":11,"endColumn":14},{"ruleId":"141","severity":1,"message":"153","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":15,"column":45,"nodeType":"156","endLine":15,"endColumn":302},{"ruleId":"157","severity":1,"message":"158","line":101,"column":8,"nodeType":"159","endLine":101,"endColumn":10,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":116,"column":8,"nodeType":"159","endLine":116,"endColumn":13,"suggestions":"162"},{"ruleId":"141","severity":1,"message":"163","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":21,"column":45,"nodeType":"156","endLine":21,"endColumn":302},{"ruleId":"157","severity":1,"message":"164","line":10,"column":5,"nodeType":"143","endLine":10,"endColumn":14,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":9,"column":17,"nodeType":"156","endLine":9,"endColumn":24},{"ruleId":"166","severity":1,"message":"168","line":10,"column":17,"nodeType":"156","endLine":10,"endColumn":25},{"ruleId":"141","severity":1,"message":"169","line":30,"column":21,"nodeType":"143","messageId":"144","endLine":30,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":51,"column":7,"nodeType":"159","endLine":51,"endColumn":9,"suggestions":"170"},{"ruleId":"157","severity":1,"message":"161","line":117,"column":7,"nodeType":"159","endLine":117,"endColumn":12,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"167","line":137,"column":13,"nodeType":"156","endLine":137,"endColumn":20},{"ruleId":"166","severity":1,"message":"168","line":138,"column":13,"nodeType":"156","endLine":138,"endColumn":21},{"ruleId":"141","severity":1,"message":"172","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FirstPage' is defined but never used.","'Switch' is defined but never used.","'NicknamePage' is defined but never used.","'미국' is defined but never used.","'한국' is defined but never used.","'언어' is defined but never used.","'ChatingPage' is defined but never used.","'SignUp' is defined but never used.","'Match' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["175"],"React Hook useEffect has a missing dependency: 'Chating'. Either include it or remove the dependency array. You can also do a functional update 'setChating(C => ...)' if you only need 'Chating' in the 'setChating' call.",["176"],"'Request' is defined but never used.","React Hook useEffect contains a call to 'setLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["177"],"react/jsx-pascal-case","Imported JSX component 일러스트 must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component 일러스트2 must be in PascalCase or SCREAMING_SNAKE_CASE","'setOutModal' is assigned a value but never used.",["178"],["179"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"180","fix":"186"},{"desc":"182","fix":"187"},"Update the dependencies array to be: [history]",{"range":"188","text":"189"},"Update the dependencies array to be: [Chating, msg]",{"range":"190","text":"191"},"Add dependencies array: []",{"range":"192","text":"193"},{"range":"194","text":"189"},{"range":"195","text":"191"},[3003,3005],"[history]",[3312,3317],"[Chating, msg]",[475,475],", []",[1237,1239],[2906,2911]]